<?php

// This file has been auto-generated by the Symfony Cache Component.

return [[

'App__Entity__Trip__CLASSMETADATA__' => 0,
'App__Entity__Booking__CLASSMETADATA__' => 1,
'App__Entity__User__CLASSMETADATA__' => 2,
'App__Entity__Message__CLASSMETADATA__' => 3,
'App__Entity__Review__CLASSMETADATA__' => 4,
'App__Entity__TravelPreferences__CLASSMETADATA__' => 5,
'App__Entity__TypeOfVehicule__CLASSMETADATA__' => 6,
'App__Entity__Vehicule__CLASSMETADATA__' => 7,
'App__Entity__UserExperienceLevel__CLASSMETADATA__' => 8,

], [

0 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\Bundle\\DoctrineBundle\\IdGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\Bundle\\DoctrineBundle\\IdGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Trip',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Trip',
                ],
                'customGeneratorDefinition' => [
                    [
                        'class' => 'Doctrine\\Bundle\\DoctrineBundle\\IdGenerator',
                    ],
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\TripRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    7,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'id',
                            'id' => true,
                        ],
                        'departure' => [
                            'fieldName' => 'departure',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'departure',
                        ],
                        'arrival' => [
                            'fieldName' => 'arrival',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'arrival',
                        ],
                        'date_of_trip' => [
                            'fieldName' => 'date_of_trip',
                            'type' => 'date',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'date_of_trip',
                        ],
                        'passengers' => [
                            'fieldName' => 'passengers',
                            'type' => 'integer',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'passengers',
                        ],
                        'trip_full' => [
                            'fieldName' => 'trip_full',
                            'type' => 'boolean',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'options' => [
                                'default' => 0,
                            ],
                            'columnName' => 'trip_full',
                        ],
                        'trip_completed' => [
                            'fieldName' => 'trip_completed',
                            'type' => 'boolean',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'options' => [
                                'default' => 0,
                            ],
                            'columnName' => 'trip_completed',
                        ],
                        'duration' => [
                            'fieldName' => 'duration',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'duration',
                        ],
                        'distance' => [
                            'fieldName' => 'distance',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'distance',
                        ],
                        'startTime' => [
                            'fieldName' => 'startTime',
                            'type' => 'time',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'start_time',
                        ],
                        'tripStarted' => [
                            'fieldName' => 'tripStarted',
                            'type' => 'boolean',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'trip_started',
                        ],
                        'created_at' => [
                            'fieldName' => 'created_at',
                            'type' => 'date',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'created_at',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'departure' => 'departure',
                        'arrival' => 'arrival',
                        'date_of_trip' => 'date_of_trip',
                        'passengers' => 'passengers',
                        'trip_full' => 'trip_full',
                        'trip_completed' => 'trip_completed',
                        'duration' => 'duration',
                        'distance' => 'distance',
                        'start_time' => 'startTime',
                        'trip_started' => 'tripStarted',
                        'created_at' => 'created_at',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'departure' => 'departure',
                        'arrival' => 'arrival',
                        'date_of_trip' => 'date_of_trip',
                        'passengers' => 'passengers',
                        'trip_full' => 'trip_full',
                        'trip_completed' => 'trip_completed',
                        'duration' => 'duration',
                        'distance' => 'distance',
                        'startTime' => 'start_time',
                        'tripStarted' => 'trip_started',
                        'created_at' => 'created_at',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'trip',
                    ],
                ],
                'associationMappings' => [
                    [
                        'driver' => [
                            'fieldName' => 'driver',
                            'joinColumns' => [
                                [
                                    'name' => 'driver_id',
                                    'unique' => false,
                                    'nullable' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => null,
                            'targetEntity' => 'App\\Entity\\User',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Trip',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'driver_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'driver_id' => 'driver_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'driver_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
1 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\Bundle\\DoctrineBundle\\IdGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\Bundle\\DoctrineBundle\\IdGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Booking',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Booking',
                ],
                'customGeneratorDefinition' => [
                    [
                        'class' => 'Doctrine\\Bundle\\DoctrineBundle\\IdGenerator',
                    ],
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\BookingRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    7,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'id',
                            'id' => true,
                        ],
                        'created_at' => [
                            'fieldName' => 'created_at',
                            'type' => 'date',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'created_at',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'created_at' => 'created_at',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'created_at' => 'created_at',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'booking',
                    ],
                ],
                'associationMappings' => [
                    [
                        'trip' => [
                            'fieldName' => 'trip',
                            'joinColumns' => [
                                [
                                    'name' => 'trip_id',
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => null,
                            'targetEntity' => 'App\\Entity\\Trip',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Booking',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'trip_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'trip_id' => 'trip_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'trip_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'user' => [
                            'fieldName' => 'user',
                            'joinColumns' => [
                                [
                                    'name' => 'user_id',
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => null,
                            'targetEntity' => 'App\\Entity\\User',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Booking',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'user_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'user_id' => 'user_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'user_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
2 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\Bundle\\DoctrineBundle\\IdGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\Bundle\\DoctrineBundle\\IdGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\User',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\User',
                ],
                'customGeneratorDefinition' => [
                    [
                        'class' => 'Doctrine\\Bundle\\DoctrineBundle\\IdGenerator',
                    ],
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\UserRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    7,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'id',
                            'id' => true,
                        ],
                        'email' => [
                            'fieldName' => 'email',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 180,
                            'unique' => true,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'email',
                        ],
                        'roles' => [
                            'fieldName' => 'roles',
                            'type' => 'json',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'roles',
                        ],
                        'password' => [
                            'fieldName' => 'password',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'password',
                        ],
                        'first_name' => [
                            'fieldName' => 'first_name',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'first_name',
                        ],
                        'last_name' => [
                            'fieldName' => 'last_name',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'last_name',
                        ],
                        'date_of_birth' => [
                            'fieldName' => 'date_of_birth',
                            'type' => 'date',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'date_of_birth',
                        ],
                        'phone' => [
                            'fieldName' => 'phone',
                            'type' => 'integer',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'phone',
                        ],
                        'adress' => [
                            'fieldName' => 'adress',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'adress',
                        ],
                        'country' => [
                            'fieldName' => 'country',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'country',
                        ],
                        'city' => [
                            'fieldName' => 'city',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'city',
                        ],
                        'bio' => [
                            'fieldName' => 'bio',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'bio',
                        ],
                        'profile_picture' => [
                            'fieldName' => 'profile_picture',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'options' => [
                                'default' => 'default_profile_picture.jpg',
                            ],
                            'columnName' => 'profile_picture',
                        ],
                        'id_card' => [
                            'fieldName' => 'id_card',
                            'type' => 'boolean',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'id_card',
                        ],
                        'id_card_file' => [
                            'fieldName' => 'id_card_file',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'id_card_file',
                        ],
                        'created_at' => [
                            'fieldName' => 'created_at',
                            'type' => 'date',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'created_at',
                        ],
                        'profile_completed' => [
                            'fieldName' => 'profile_completed',
                            'type' => 'boolean',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'profile_completed',
                        ],
                        'trips_made' => [
                            'fieldName' => 'trips_made',
                            'type' => 'integer',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'trips_made',
                        ],
                        'global_rating' => [
                            'fieldName' => 'global_rating',
                            'type' => 'float',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'global_rating',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'email' => 'email',
                        'roles' => 'roles',
                        'password' => 'password',
                        'first_name' => 'first_name',
                        'last_name' => 'last_name',
                        'date_of_birth' => 'date_of_birth',
                        'phone' => 'phone',
                        'adress' => 'adress',
                        'country' => 'country',
                        'city' => 'city',
                        'bio' => 'bio',
                        'profile_picture' => 'profile_picture',
                        'id_card' => 'id_card',
                        'id_card_file' => 'id_card_file',
                        'created_at' => 'created_at',
                        'profile_completed' => 'profile_completed',
                        'trips_made' => 'trips_made',
                        'global_rating' => 'global_rating',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'email' => 'email',
                        'roles' => 'roles',
                        'password' => 'password',
                        'first_name' => 'first_name',
                        'last_name' => 'last_name',
                        'date_of_birth' => 'date_of_birth',
                        'phone' => 'phone',
                        'adress' => 'adress',
                        'country' => 'country',
                        'city' => 'city',
                        'bio' => 'bio',
                        'profile_picture' => 'profile_picture',
                        'id_card' => 'id_card',
                        'id_card_file' => 'id_card_file',
                        'created_at' => 'created_at',
                        'profile_completed' => 'profile_completed',
                        'trips_made' => 'trips_made',
                        'global_rating' => 'global_rating',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'user',
                    ],
                ],
                'associationMappings' => [
                    [
                        'user_experience' => [
                            'fieldName' => 'user_experience',
                            'joinColumns' => [
                                [
                                    'name' => 'user_experience_id',
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => null,
                            'targetEntity' => 'App\\Entity\\UserExperienceLevel',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\User',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'user_experience_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'user_experience_id' => 'user_experience_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'user_experience_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'travel_preferences' => [
                            'fieldName' => 'travel_preferences',
                            'targetEntity' => 'App\\Entity\\TravelPreferences',
                            'joinColumns' => [
                                [
                                    'name' => 'travel_preferences_id',
                                    'unique' => true,
                                    'nullable' => true,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'cascade' => [
                                'persist',
                                'remove',
                            ],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 1,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\User',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'travel_preferences_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'travel_preferences_id' => 'travel_preferences_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'travel_preferences_id',
                            ],
                        ],
                        'vehicule' => [
                            'fieldName' => 'vehicule',
                            'targetEntity' => 'App\\Entity\\Vehicule',
                            'joinColumns' => [
                                [
                                    'name' => 'vehicule_id',
                                    'unique' => true,
                                    'nullable' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'cascade' => [
                                'persist',
                                'remove',
                            ],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 1,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\User',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'vehicule_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'vehicule_id' => 'vehicule_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'vehicule_id',
                            ],
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
3 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\Bundle\\DoctrineBundle\\IdGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\Bundle\\DoctrineBundle\\IdGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Message',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Message',
                ],
                'customGeneratorDefinition' => [
                    [
                        'class' => 'Doctrine\\Bundle\\DoctrineBundle\\IdGenerator',
                    ],
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\MessageRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    7,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'id',
                            'id' => true,
                        ],
                        'content' => [
                            'fieldName' => 'content',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'content',
                        ],
                        'send_at' => [
                            'fieldName' => 'send_at',
                            'type' => 'datetime',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'send_at',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'content' => 'content',
                        'send_at' => 'send_at',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'content' => 'content',
                        'send_at' => 'send_at',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'message',
                    ],
                ],
                'associationMappings' => [
                    [
                        'sender' => [
                            'fieldName' => 'sender',
                            'joinColumns' => [
                                [
                                    'name' => 'sender_id',
                                    'unique' => false,
                                    'nullable' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => null,
                            'targetEntity' => 'App\\Entity\\User',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Message',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'sender_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'sender_id' => 'sender_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'sender_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'receiver' => [
                            'fieldName' => 'receiver',
                            'joinColumns' => [
                                [
                                    'name' => 'receiver_id',
                                    'unique' => false,
                                    'nullable' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => null,
                            'targetEntity' => 'App\\Entity\\User',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Message',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'receiver_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'receiver_id' => 'receiver_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'receiver_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
4 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\Bundle\\DoctrineBundle\\IdGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\Bundle\\DoctrineBundle\\IdGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Review',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Review',
                ],
                'customGeneratorDefinition' => [
                    [
                        'class' => 'Doctrine\\Bundle\\DoctrineBundle\\IdGenerator',
                    ],
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\ReviewRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    7,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'id',
                            'id' => true,
                        ],
                        'content' => [
                            'fieldName' => 'content',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'content',
                        ],
                        'rating' => [
                            'fieldName' => 'rating',
                            'type' => 'integer',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'rating',
                        ],
                        'created_at' => [
                            'fieldName' => 'created_at',
                            'type' => 'datetime',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'created_at',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'content' => 'content',
                        'rating' => 'rating',
                        'created_at' => 'created_at',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'content' => 'content',
                        'rating' => 'rating',
                        'created_at' => 'created_at',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'review',
                    ],
                ],
                'associationMappings' => [
                    [
                        'author' => [
                            'fieldName' => 'author',
                            'joinColumns' => [
                                [
                                    'name' => 'author_id',
                                    'unique' => false,
                                    'nullable' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => null,
                            'targetEntity' => 'App\\Entity\\User',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Review',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'author_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'author_id' => 'author_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'author_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'user_rated' => [
                            'fieldName' => 'user_rated',
                            'joinColumns' => [
                                [
                                    'name' => 'user_rated_id',
                                    'unique' => false,
                                    'nullable' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => null,
                            'targetEntity' => 'App\\Entity\\User',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Review',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'user_rated_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'user_rated_id' => 'user_rated_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'user_rated_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'trip' => [
                            'fieldName' => 'trip',
                            'joinColumns' => [
                                [
                                    'name' => 'trip_id',
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [
                                'persist',
                                'remove',
                            ],
                            'inversedBy' => null,
                            'targetEntity' => 'App\\Entity\\Trip',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Review',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'trip_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'trip_id' => 'trip_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'trip_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
5 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\TravelPreferences',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\TravelPreferences',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\TravelPreferencesRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'discussion' => [
                            'fieldName' => 'discussion',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'discussion',
                        ],
                        'music' => [
                            'fieldName' => 'music',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'music',
                        ],
                        'smoking' => [
                            'fieldName' => 'smoking',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'smoking',
                        ],
                        'animals' => [
                            'fieldName' => 'animals',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'animals',
                        ],
                        'health_pass' => [
                            'fieldName' => 'health_pass',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'health_pass',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'discussion' => 'discussion',
                        'music' => 'music',
                        'smoking' => 'smoking',
                        'animals' => 'animals',
                        'health_pass' => 'health_pass',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'discussion' => 'discussion',
                        'music' => 'music',
                        'smoking' => 'smoking',
                        'animals' => 'animals',
                        'health_pass' => 'health_pass',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'travel_preferences',
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
6 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\TypeOfVehicule',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\TypeOfVehicule',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\TypeOfVehiculeRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'type' => [
                            'fieldName' => 'type',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'type',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'type' => 'type',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'type' => 'type',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'type_of_vehicule',
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
7 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\Bundle\\DoctrineBundle\\IdGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\Bundle\\DoctrineBundle\\IdGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Vehicule',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Vehicule',
                ],
                'customGeneratorDefinition' => [
                    [
                        'class' => 'Doctrine\\Bundle\\DoctrineBundle\\IdGenerator',
                    ],
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\VehiculeRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    7,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'id',
                            'id' => true,
                        ],
                        'country_of_registration' => [
                            'fieldName' => 'country_of_registration',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'country_of_registration',
                        ],
                        'numberplate' => [
                            'fieldName' => 'numberplate',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'numberplate',
                        ],
                        'brand' => [
                            'fieldName' => 'brand',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'brand',
                        ],
                        'model' => [
                            'fieldName' => 'model',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'model',
                        ],
                        'color' => [
                            'fieldName' => 'color',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'color',
                        ],
                        'year' => [
                            'fieldName' => 'year',
                            'type' => 'integer',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'year',
                        ],
                        'vehicule_picture' => [
                            'fieldName' => 'vehicule_picture',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'options' => [
                                'default' => 'default-vehicule.jpg',
                            ],
                            'columnName' => 'vehicule_picture',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'country_of_registration' => 'country_of_registration',
                        'numberplate' => 'numberplate',
                        'brand' => 'brand',
                        'model' => 'model',
                        'color' => 'color',
                        'year' => 'year',
                        'vehicule_picture' => 'vehicule_picture',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'country_of_registration' => 'country_of_registration',
                        'numberplate' => 'numberplate',
                        'brand' => 'brand',
                        'model' => 'model',
                        'color' => 'color',
                        'year' => 'year',
                        'vehicule_picture' => 'vehicule_picture',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'vehicule',
                    ],
                ],
                'associationMappings' => [
                    [
                        'typeOfVehicule' => [
                            'fieldName' => 'typeOfVehicule',
                            'joinColumns' => [
                                [
                                    'name' => 'type_of_vehicule_id',
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => null,
                            'targetEntity' => 'App\\Entity\\TypeOfVehicule',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Vehicule',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'type_of_vehicule_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'type_of_vehicule_id' => 'type_of_vehicule_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'type_of_vehicule_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
8 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\UserExperienceLevel',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\UserExperienceLevel',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\UserExperienceLevelRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'experience_level' => [
                            'fieldName' => 'experience_level',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'experience_level',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'experience_level' => 'experience_level',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'experience_level' => 'experience_level',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'user_experience_level',
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},

]];
