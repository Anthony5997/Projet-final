<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Trip extends \App\Entity\Trip implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Trip' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Trip' . "\0" . 'departure', '' . "\0" . 'App\\Entity\\Trip' . "\0" . 'arrival', '' . "\0" . 'App\\Entity\\Trip' . "\0" . 'date_of_trip', '' . "\0" . 'App\\Entity\\Trip' . "\0" . 'passengers', '' . "\0" . 'App\\Entity\\Trip' . "\0" . 'trip_full', '' . "\0" . 'App\\Entity\\Trip' . "\0" . 'trip_completed', '' . "\0" . 'App\\Entity\\Trip' . "\0" . 'driver', '' . "\0" . 'App\\Entity\\Trip' . "\0" . 'duration', '' . "\0" . 'App\\Entity\\Trip' . "\0" . 'distance', '' . "\0" . 'App\\Entity\\Trip' . "\0" . 'startTime', '' . "\0" . 'App\\Entity\\Trip' . "\0" . 'tripStarted', '' . "\0" . 'App\\Entity\\Trip' . "\0" . 'created_at'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Trip' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Trip' . "\0" . 'departure', '' . "\0" . 'App\\Entity\\Trip' . "\0" . 'arrival', '' . "\0" . 'App\\Entity\\Trip' . "\0" . 'date_of_trip', '' . "\0" . 'App\\Entity\\Trip' . "\0" . 'passengers', '' . "\0" . 'App\\Entity\\Trip' . "\0" . 'trip_full', '' . "\0" . 'App\\Entity\\Trip' . "\0" . 'trip_completed', '' . "\0" . 'App\\Entity\\Trip' . "\0" . 'driver', '' . "\0" . 'App\\Entity\\Trip' . "\0" . 'duration', '' . "\0" . 'App\\Entity\\Trip' . "\0" . 'distance', '' . "\0" . 'App\\Entity\\Trip' . "\0" . 'startTime', '' . "\0" . 'App\\Entity\\Trip' . "\0" . 'tripStarted', '' . "\0" . 'App\\Entity\\Trip' . "\0" . 'created_at'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Trip $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?string
    {
        if ($this->__isInitialized__ === false) {
            return  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getDeparture(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeparture', []);

        return parent::getDeparture();
    }

    /**
     * {@inheritDoc}
     */
    public function setDeparture(string $departure): \App\Entity\Trip
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeparture', [$departure]);

        return parent::setDeparture($departure);
    }

    /**
     * {@inheritDoc}
     */
    public function getArrival(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArrival', []);

        return parent::getArrival();
    }

    /**
     * {@inheritDoc}
     */
    public function setArrival(string $arrival): \App\Entity\Trip
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setArrival', [$arrival]);

        return parent::setArrival($arrival);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateOfTrip(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateOfTrip', []);

        return parent::getDateOfTrip();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateOfTrip(\DateTimeInterface $date_of_trip): \App\Entity\Trip
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateOfTrip', [$date_of_trip]);

        return parent::setDateOfTrip($date_of_trip);
    }

    /**
     * {@inheritDoc}
     */
    public function getPassengers(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassengers', []);

        return parent::getPassengers();
    }

    /**
     * {@inheritDoc}
     */
    public function setPassengers(int $passengers): \App\Entity\Trip
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassengers', [$passengers]);

        return parent::setPassengers($passengers);
    }

    /**
     * {@inheritDoc}
     */
    public function getTripFull(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTripFull', []);

        return parent::getTripFull();
    }

    /**
     * {@inheritDoc}
     */
    public function setTripFull(bool $trip_full): \App\Entity\Trip
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTripFull', [$trip_full]);

        return parent::setTripFull($trip_full);
    }

    /**
     * {@inheritDoc}
     */
    public function getTripCompleted(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTripCompleted', []);

        return parent::getTripCompleted();
    }

    /**
     * {@inheritDoc}
     */
    public function setTripCompleted(bool $trip_completed): \App\Entity\Trip
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTripCompleted', [$trip_completed]);

        return parent::setTripCompleted($trip_completed);
    }

    /**
     * {@inheritDoc}
     */
    public function getDriver(): ?\App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDriver', []);

        return parent::getDriver();
    }

    /**
     * {@inheritDoc}
     */
    public function setDriver(?\App\Entity\User $driver): \App\Entity\Trip
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDriver', [$driver]);

        return parent::setDriver($driver);
    }

    /**
     * {@inheritDoc}
     */
    public function getDuration(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDuration', []);

        return parent::getDuration();
    }

    /**
     * {@inheritDoc}
     */
    public function setDuration(string $duration): \App\Entity\Trip
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDuration', [$duration]);

        return parent::setDuration($duration);
    }

    /**
     * {@inheritDoc}
     */
    public function getDistance(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDistance', []);

        return parent::getDistance();
    }

    /**
     * {@inheritDoc}
     */
    public function setDistance(string $distance): \App\Entity\Trip
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDistance', [$distance]);

        return parent::setDistance($distance);
    }

    /**
     * {@inheritDoc}
     */
    public function getStartTime(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStartTime', []);

        return parent::getStartTime();
    }

    /**
     * {@inheritDoc}
     */
    public function setStartTime(?\DateTimeInterface $startTime): \App\Entity\Trip
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStartTime', [$startTime]);

        return parent::setStartTime($startTime);
    }

    /**
     * {@inheritDoc}
     */
    public function getTripStarted(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTripStarted', []);

        return parent::getTripStarted();
    }

    /**
     * {@inheritDoc}
     */
    public function setTripStarted(?bool $tripStarted): \App\Entity\Trip
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTripStarted', [$tripStarted]);

        return parent::setTripStarted($tripStarted);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt(\DateTimeInterface $created_at): \App\Entity\Trip
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$created_at]);

        return parent::setCreatedAt($created_at);
    }

    /**
     * {@inheritDoc}
     */
    public function jsonSerialize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'jsonSerialize', []);

        return parent::jsonSerialize();
    }

}
